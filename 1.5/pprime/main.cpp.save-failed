/*
ID:perfect13
LANG:C++
TASK:pprime
*/
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#define MAXN 10000
using namespace std;

bool prime[MAXN];
int prime_list[MAXN];
int num;

void initiate()
{
    memset(prime,true,sizeof(prime));
    prime[0]=false;
    prime[1]=false;
    for(int i=2;i<MAXN;i++)
        if (prime[i])
        {
            prime_list[++num]=i;
            for(int j=i+i;j<MAXN;j+=i)
                prime[j]=false;
        }
}

bool is_prime(int k)
{
    if (k<MAXN){
        if (prime[k]) return true;
        else return false;
    }
    for(int i=1;i<=num;i++)
        if (k%prime_list[i]==0) return false;
    return true;
}

vector<int> result;

void dfs(int num,int len)
{
    if (len>8) return;
    if (is_prime(num))
        result.push_back(num);
    int factor=1;
    for(int i=0;i<len;i++)
        factor*=10;
}
int first_num;
int flag;

int main()
{
    FILE *fin=fopen("pprime.in","r");
    FILE *fout=fopen("pprime.out","w");
    int a,b;
    char str[100];
    fscanf(fin,"%d%d",&a,&b);
    initiate();
    for(int i=a;i<=b;i++)
    {
        sprintf(str,"%d",i);
        if (is_palindromes(str))
        {
            int k=i;
            flag=0;//0为偶数,1为奇数
            while(k){
                first_num=k%10;
                k=k/10;
                flag=1-flag;
            }
            if (i!=11&&flag==0) continue;
            if (first_num%2==0) continue;
            if (first_num==5&&i!=5) continue;
            if (is_prime(i))
                    fprintf(fout,"%d\n",i);
        }
    }
    return 0;
}
